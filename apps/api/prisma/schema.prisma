// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  EDITOR
  VIEWER
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  passwordHash String
  role         Role     @default(EDITOR)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("users")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @unique
  slug String @unique

  posts Post[]

  @@map("categories")
}

model Post {
  id         Int      @id @default(autoincrement())
  title      String
  slug       String   @unique
  body       String?
  excerpt    String?
  published  Boolean  @default(false)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  categories Category[]
  media      Media[]

  @@map("posts")
}

model Product {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String  @unique
  summary     String?
  description String?
  specs       Json?
  price       String?
  featured    Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  media Media[]

  @@map("products")
}

model Solution {
  id          Int     @id @default(autoincrement())
  name        String
  slug        String  @unique
  description String?
  benefits    Json?
  features    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  media Media[]

  @@map("solutions")
}

model Download {
  id        Int      @id @default(autoincrement())
  title     String
  fileUrl   String
  fileName  String?
  fileSize  String?
  kind      String   // "manual", "software", "report", "brochure"
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("downloads")
}

model Media {
  id         Int     @id @default(autoincrement())
  url        String
  fileName   String?
  type       String  @default("image") // image, video, file
  alt        String?
  caption    String?
  createdAt  DateTime @default(now())

  // Relations
  postId     Int?
  productId  Int?
  solutionId Int?

  post     Post?     @relation(fields: [postId], references: [id], onDelete: Cascade)
  product  Product?  @relation(fields: [productId], references: [id], onDelete: Cascade)
  solution Solution? @relation(fields: [solutionId], references: [id], onDelete: Cascade)

  @@map("media")
}

model ContactMessage {
  id        Int      @id @default(autoincrement())
  name      String
  email     String
  phone     String?
  company   String?
  message   String
  createdAt DateTime @default(now())

  @@map("contact_messages")
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  actorEmail  String
  action      String   // CREATE, UPDATE, DELETE
  entity      String   // Post, Product, etc.
  entityId    Int?
  meta        Json?    // Additional context
  createdAt   DateTime @default(now())

  @@map("audit_logs")
}